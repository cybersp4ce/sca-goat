apply from: './rust.gradle'


task rustup(dependsOn: 'rustVersion') {
}

task clean {
    doLast {
        exec {
            args 'clean'
            executable 'cargo'
        }        
    }
}

task build {
    doLast {
        exec {
            args 'build'
            executable 'cargo'
        }
    }
}

// Variant of the 'build' task used in CI
task buildCI {
    doLast {
        exec {
            executable 'cargo'
            args 'build', '--locked' // disallow out-of-date Cargo.toml
        }
    }
}

task test {
    doLast {
        // execute `./gradlew test -Pv` for verbose/non-captured test output
        exec {
            args 'test'
            if (project.hasProperty('case')) {
                args += project.getProperty('case')
            }
            if (project.hasProperty('v')) {
                args += ['--', '--nocapture']
            }
            executable 'cargo'
        }
    }
}

// Variant of the 'test' task used in CI
task testCI {
    doLast {
        exec {
            executable 'cargo'
            args 'test', '--locked', '--', '--nocapture'
        }
    }
}

task example {
    doLast {
        String server = 's'
        if (project.hasProperty('local')) {
            server = 'l'
        } else if (project.hasProperty('prod')) {
            server = 'p'
        }

        exec {
            args 'run', '--example', 'interactive', '--', "-${server}"
            executable 'cargo'
        }
    }
}
